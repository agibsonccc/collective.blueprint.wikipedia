[transmogrifier]
pipeline =
    source

    normalize-id
    normalize-id2
    set-path
    set-title
    set-text
    set-contenttype
    create-nonexisting-folders
    set-workflow-state

    create-object
    update-schema
    update-workflow-state

    reindexobject
    savepoint
    
[source]
blueprint = collective.blueprint.wikipedia
xml = simplewiki-latest-pages-articles.xml
commit-at-every = 2000
#stop-at-number = 100

[normalize-id]
blueprint = plone.app.transmogrifier.urlnormalizer
source-key = _wiki_title
destination-key = string:_tmp_id
locale = string:en

[normalize-id2]
blueprint = collective.transmogrifier.sections.inserter
key = string:_tmp_id
value = python:item['_tmp_id'].startswith('.') and item['_tmp_id'][1:] or item['_tmp_id']

[set-path]
blueprint = collective.transmogrifier.sections.inserter
key = string:_path
value = python:'/en/%s/%s' % (item['_tmp_id'][0], item['_tmp_id'])

[set-title]
blueprint = collective.transmogrifier.sections.inserter
key = string:title
value = python:item['_wiki_title']

[set-text]
blueprint = collective.transmogrifier.sections.inserter
key = string:text
value = python:item['_wiki_text']

[set-contenttype]
blueprint = collective.transmogrifier.sections.inserter
key = string:_type
value = string:Document

[create-nonexisting-folders]
blueprint = collective.transmogrifier.sections.folders

[set-workflow-state]
blueprint = collective.transmogrifier.sections.inserter
key = string:_transitions
value = string:publish

[create-object]
blueprint = collective.transmogrifier.sections.constructor

[update-schema]
blueprint = plone.app.transmogrifier.atschemaupdater

[update-workflow-state]
blueprint = plone.app.transmogrifier.workflowupdater

[reindexobject]
blueprint = plone.app.transmogrifier.reindexobject

[savepoint]
blueprint = collective.transmogrifier.sections.savepoint
every = 2000
